.. _python_pkg_streamlit:

Streamlit
=========

.. note::
    **Prop√≥sito:** es una librar√≠a permite la creaci√≥n de Dashboard interactivos.

Es un framework de aplicaci√≥n de c√≥digo abierto (un paquete de Python) que nos
brinda el poder de crear aplicaciones atractivas sin ning√∫n conocimiento de
desarrollo de front-end.

Esto nos libera de involucrarnos en cualquier marco de trabajo front-end o codificaci√≥n
en HTML, CSS y JavaScript.

Utiliza Python puro para desarrollar su front-end.

.. figure:: ../_static/images/streamlit_logo.png
    :align: center
    :width: 60%

    Logotipo de librer√≠a Streamlit


¬øCu√°ndo usar Streamlit?
-----------------------

En primer lugar, si est√° codificando secuencias de comandos de Python que se ejecutan
regularmente en una m√°quina con un programador de trabajos como cron, Streamlit no es √∫til
para usted.

Pero si est√° desarrollando una herramienta que desea compartir con los miembros de su equipo,
por ejemplo, una aplicaci√≥n de investigaci√≥n de palabras clave, puede usar Streamlit.

Adem√°s, si necesita un m√©todo de autenticaci√≥n de usuario, la comunidad Streamlit desarroll√≥
un paquete que puede manejarlo por usted.


.. _python_pkg_streamlit_instalar:

Instalaci√≥n
-----------

Para instalar el paquete `streamlit`_ ejecute el siguiente comando, el cual
a continuaci√≥n se presentan el correspondiente comando de tu sistema operativo:

.. tabs::

   .. group-tab:: Linux

      .. code-block:: console

          $ pip install streamlit

   .. group-tab:: Windows

      .. code-block:: console

          > pip install streamlit


Puede probar si la instalaci√≥n se realizo correctamente, ejecutando
el siguiente comando correspondiente a tu sistema operativo:

.. tabs::

   .. group-tab:: Linux

      .. code-block:: console

          $ python -c "import streamlit ; print(streamlit.__version__)"

   .. group-tab:: Windows

      .. code-block:: console

          > python -c "import streamlit ; print(streamlit.__version__)"


Si muestra el numero de la versi√≥n instalada de ``streamlit``, tiene
correctamente instalada la paquete. Con esto, ya tiene todo listo para continuar.

---


.. _python_pkg_streamlit_hello:

Pr√°ctica - Hello
----------------

A continuaci√≥n se presenta la ejecuci√≥n de una demostraci√≥n que incluye ``Streamlit``,
ejecutando el siguiente comando correspondiente a tu sistema operativo:

.. tabs::

   .. group-tab:: Linux

      .. code-block:: console

          $ streamlit hello

   .. group-tab:: Windows

      .. code-block:: console

          > streamlit hello


El anterior comando al ejecutar debe mostrar el siguiente mensaje:

.. code-block:: console

    Welcome to Streamlit. Check out our demo in your browser.

    Local URL: http://localhost:8501
    Network URL: http://172.28.94.109:8501

    Ready to create your own Python apps super quickly?
    Head over to https://docs.streamlit.io

    May you create awesome apps!

``Local URL``
    Direcci√≥n local de tu PC donde ejecuta esta demostraci√≥n, valor por
    defecto es **http://localhost:8501**

``Network URL``
    Direcci√≥n de la red local de tu PC donde donde puede compartir la forma
    como accede a esta demostraci√≥n.

Abra el navegador web en la direcci√≥n local definida en el valor ``Local URL``:

.. figure:: ../_static/images/streamlit_hello_index.png
    :align: center
    :width: 60%

    Streamlit Hello - Welcome to Streamlit! üëã

----

.. figure:: ../_static/images/streamlit_hello_animation_demo.png
    :align: center
    :width: 60%

    Streamlit Hello - Animation Demo

Esta aplicaci√≥n muestra c√≥mo puede usar Streamlit para crear animaciones
geniales. Muestra un fractal animado basado en el conjunto de Julia. Utilice
el control deslizante para ajustar diferentes par√°metros.

----

.. figure:: ../_static/images/streamlit_hello_plotting_demo.png
    :align: center
    :width: 60%

    Streamlit Hello - Plotting Demo

Esta demostraci√≥n ilustra una combinaci√≥n de Plotting y animaci√≥n con Streamlit.
En este ejemplo se genera un mont√≥n de n√∫meros aleatorios en un bucle durante
unos 5 segundos.

----

.. figure:: ../_static/images/streamlit_hello_mapping_demo.png
    :align: center
    :width: 60%

    Streamlit Hello - Mapping Demo

Esta demostraci√≥n muestra c√≥mo usar st.pydeck_chart para mostrar datos geoespaciales.


----

.. figure:: ../_static/images/streamlit_hello_dataframe_demo.png
    :align: center
    :width: 60%

    Streamlit Hello - DataFrame Demo

Esta demostraci√≥n muestra c√≥mo usar st.write para visualizar Pandas DataFrames.
(Datos cortes√≠a de `UN Data Explorer <http://data.un.org/Explorer.aspx>`_).

---

.. _python_pkg_streamlit_hello_word:

Pr√°ctica - Hello World
----------------------

A continuaci√≥n se presenta una pr√°ctica del famoso `Hello World`_ usando con ``Streamlit``,
a continuaci√≥n la estructura de proyecto llamado ``hello_word``:

.. code-block:: console

    hello_word/
    ‚îú‚îÄ‚îÄ __init__.py
    ‚îú‚îÄ‚îÄ app.py
    ‚îî‚îÄ‚îÄ requirements.txt

A continuaci√≥n se presenta y explica el uso de cada archivo para esta proyecto:

*Archivo app.py*

M√≥dulo de principal del programa.

.. literalinclude:: ../../recursos/leccion5/streamlit/hello_word/app.py
    :language: python
    :linenos:
    :lines: 1-3

*Archivo requirements.txt*

Archivo de `requirements.txt`_ de la herramienta de gesti√≥n de paquetes `pip`_.

.. literalinclude:: ../../recursos/leccion5/streamlit/hello_word/requirements.txt
    :language: text
    :linenos:
    :lines: 1-1

A continuaci√≥n se presenta la ejecuci√≥n de una demostraci√≥n personalizada de `Hello World`_,
ejecutando los siguientes comandos correspondiente a tu sistema operativo:

.. tabs::

   .. group-tab:: Linux

      .. code-block:: console

          $ pip install -r hello_word/requirements.txt
          $ streamlit run hello_word/app.py

   .. group-tab:: Windows

      .. code-block:: console

          > pip install -r hello_word/requirements.txt
          > streamlit run hello_word/app.py


El anterior comando al ejecutar debe mostrar el siguiente mensaje:

.. code-block:: console

    You can now view your Streamlit app in your browser.

    Local URL: http://localhost:8501
    Network URL: http://172.28.94.109:8501

``Local URL``
    Direcci√≥n local de tu PC donde ejecuta esta demostraci√≥n, valor por
    defecto es **http://localhost:8501**

``Network URL``
    Direcci√≥n de la red local de tu PC donde donde puede compartir la forma
    como accede a esta demostraci√≥n.

Abra el navegador web en la direcci√≥n local definida en el valor ``Local URL``:

.. figure:: ../_static/images/streamlit_hello_world.png
    :align: center
    :width: 60%

    Streamlit - Hello World

De esta forma tiene una pr√°ctica real de crear un mensaje Hello World y usado la
librer√≠a Streamlit.

---

.. _python_pkg_streamlit_dashboard:

Pr√°ctica - Dashboard
--------------------

A continuaci√≥n se presenta una pr√°ctica de un Dashboard de an√°lisis de ventas de
tres (03) sucursales a nivel nacional de una cadena de supermercado usando
con ``Streamlit``, a continuaci√≥n la estructura de proyecto llamado ``dashboard``:

.. code-block:: console

    dashboard/
    ‚îú‚îÄ‚îÄ app.py
    ‚îú‚îÄ‚îÄ __init__.py
    ‚îú‚îÄ‚îÄ requirements.txt
    ‚îú‚îÄ‚îÄ .streamlit
    ‚îÇ   ‚îî‚îÄ‚îÄ config.toml
    ‚îî‚îÄ‚îÄ ventas_supermercado.xlsx

A continuaci√≥n se presenta y explica el uso de cada archivo para esta proyecto:

*Archivo app.py*

M√≥dulo de principal del programa.

.. literalinclude:: ../../recursos/leccion5/streamlit/dashboard/app.py
    :language: python
    :linenos:
    :lines: 1-137

*Archivo .streamlit/config.toml*

Archivo de configuraci√≥n de proyecto Streamlit.

.. literalinclude:: ../../recursos/leccion5/streamlit/dashboard/.streamlit/config.toml
    :language: python
    :linenos:
    :lines: 1-16

*Archivo requirements.txt*

Archivo de `requirements.txt`_ de la herramienta de gesti√≥n de paquetes `pip`_.

.. literalinclude:: ../../recursos/leccion5/streamlit/dashboard/requirements.txt
    :language: text
    :linenos:
    :lines: 1-4

*Archivo ventas_supermercado.xlsx*

Archivo de la hoja de calculo de ``Microsoft Excel`` llamado :file:`ventas_supermercado.xlsx`
la cual no se incluye ya que cada vez que se inicia el programa :file:`app.py`, para cuidar la
creaci√≥n de los datos iniciales.

.. figure:: ../_static/images/streamlit_ventas_supermercado_xlsx.png
    :align: center
    :width: 60%

    Archivo de Excel ventas_supermercado.xlsx

A continuaci√≥n se presenta la ejecuci√≥n de una demostraci√≥n personalizada de ``Tablero de Ventas``,
ejecutando los siguientes comandos correspondiente a tu sistema operativo:

.. tabs::

   .. group-tab:: Linux

      .. code-block:: console

          $ pip install -r dashboard/requirements.txt
          $ streamlit run dashboard/app.py

   .. group-tab:: Windows

      .. code-block:: console

          > pip install -r dashboard/requirements.txt
          > streamlit run dashboard/app.py


El anterior comando al ejecutar debe mostrar el siguiente mensaje:

.. code-block:: console

    You can now view your Streamlit app in your browser.

    Local URL: http://localhost:8501
    Network URL: http://172.28.94.109:8501

``Local URL``
    Direcci√≥n local de tu PC donde ejecuta esta demostraci√≥n, valor por
    defecto es **http://localhost:8501**

``Network URL``
    Direcci√≥n de la red local de tu PC donde donde puede compartir la forma
    como accede a esta demostraci√≥n.

Abra el navegador web en la direcci√≥n local definida en el valor ``Local URL``:

.. figure:: ../_static/images/streamlit_tablero_ventas.png
    :align: center
    :width: 60%

    Streamlit - Tablero de Ventas

De esta forma tiene una pr√°ctica real de crear un Tablero de Ventas, usando fuente
de datos desde una hoja de calculo de Excel y usado la librer√≠a Streamlit.

---

.. _python_pkg_streamlit_sqlite_crud:

Pr√°ctica - SQLite CRUD
----------------------

A continuaci√≥n se presenta una pr√°ctica de un simple ``Blog`` que hace las operaciones
de manipulaci√≥n CRUD para generar anal√≠tica de las entradas del Blog con ``Streamlit``,
a continuaci√≥n la estructura de proyecto llamado ``sqlite_crud``:

.. code-block:: console

    sqlite_crud/
    ‚îú‚îÄ‚îÄ app.py
    ‚îú‚îÄ‚îÄ db_initial.py
    ‚îú‚îÄ‚îÄ db.py
    ‚îú‚îÄ‚îÄ .env.example
    ‚îú‚îÄ‚îÄ __init__.py
    ‚îú‚îÄ‚îÄ layouts.py
    ‚îú‚îÄ‚îÄ requirements.txt
    ‚îú‚îÄ‚îÄ settings.py
    ‚îú‚îÄ‚îÄ simple_blog.sqlite3
    ‚îî‚îÄ‚îÄ .streamlit
        ‚îî‚îÄ‚îÄ config.toml

A continuaci√≥n se presenta y explica el uso de cada archivo para esta proyecto:

*Archivo app.py*

M√≥dulo de principal del programa.

.. literalinclude:: ../../recursos/leccion5/streamlit/sqlite_crud/app.py
    :language: python
    :linenos:
    :lines: 1-525

*Archivo db_initial.py*

M√≥dulo que agregar datos iniciales de la publicaci√≥n de la entrada del blog.

.. literalinclude:: ../../recursos/leccion5/streamlit/sqlite_crud/db_initial.py
    :language: python
    :linenos:
    :lines: 1-88

*Archivo db.py*

M√≥dulo de funciones de la base de datos SQLite.

.. literalinclude:: ../../recursos/leccion5/streamlit/sqlite_crud/db.py
    :language: python
    :linenos:
    :lines: 1-77

*Archivo .env.example*

Archivo plantilla `dotenv`_ del paquete adicional `python-dotenv`_.

.. literalinclude:: ../../recursos/leccion5/streamlit/sqlite_crud/.env.example
    :language: text
    :linenos:
    :lines: 1-22

*Archivo layouts.py*

M√≥dulo de plantillas de dise√±o Streamlit.

.. literalinclude:: ../../recursos/leccion5/streamlit/sqlite_crud/layouts.py
    :language: python
    :linenos:
    :lines: 1-52

*Archivo requirements.txt*

Archivo de `requirements.txt`_ de la herramienta de gesti√≥n de paquetes `pip`_.

.. literalinclude:: ../../recursos/leccion5/streamlit/sqlite_crud/requirements.txt
    :language: text
    :linenos:
    :lines: 1-7

*Archivo settings.py*

M√≥dulo de configuraci√≥n de "Simple Blog"

.. literalinclude:: ../../recursos/leccion5/streamlit/sqlite_crud/settings.py
    :language: python
    :linenos:
    :lines: 1-65

*Archivo simple_blog.sqlite3*

Archivo de la hoja de calculo de ``SQLite`` llamado :file:`simple_blog.sqlite3`
la cual no se incluye ya que cada vez que se inicia el programa :file:`app.py`, para
cuidar la creaci√≥n de los datos iniciales.

*Archivo .streamlit/config.toml*

Archivo de configuraci√≥n de proyecto Streamlit.

.. literalinclude:: ../../recursos/leccion5/streamlit/sqlite_crud/.streamlit/config.toml
    :language: python
    :linenos:
    :lines: 1-19

.. comments:

    .. figure:: ../_static/images/streamlit_ventas_supermercado_xlsx.png
        :align: center
        :width: 60%

        Archivo de SQLite simple_blog.sqlite3

A continuaci√≥n se presenta la ejecuci√≥n de una demostraci√≥n de ``Simple Blog``,
ejecutando los siguientes comandos correspondiente a tu sistema operativo:

.. tabs::

   .. group-tab:: Linux

      Antes de ejecutar debes instalar sus dependencias, con el siguiente comando:

      .. code-block:: console

          $ pip install -r requirements.txt

      Ademas debe instalar y editar el archivo :file:`.env`, con el siguiente comando:

      .. code-block:: console

          $ cp .env.example .env
          $ nano .env

      .. tip::
        El archivo :file:`.env` se definen las configuraciones de conexi√≥n a la base de datos,
        puede modificarlo cambiar valores de la conexi√≥n.

      .. tip::
        Para ejecutar el c√≥digo fuente de esta pr√°ctica debe invocar primero al m√≥dulo :file:`db_initial.py`,
        abra una consola de comando, acceda al directorio donde se encuentra la estructura previa
        y ejecute el siguiente comando:

      .. code-block:: console

          $ python db_initial.py

      El anterior c√≥digo al ejecutar debe mostrar el siguiente mensaje:

      .. code-block:: console

          INFO:root:Database creation 'simple_blog.sqlite3' was successful!
          INFO:root:Connection to database 'simple_blog.sqlite3' was established successfully!
          INFO:root:The table was created successfully!
          INFO:root:The cursor for create database table was closed successfully!
          INFO:root:¬°3 record(s) was(were) successfully added to the table!
          INFO:root:The cursor for data initial of blog entry posts was closed successfully!
          INFO:root:Disconnect to database 'simple_blog.sqlite3' was closed successfully!

      .. tip::
        Para ejecutar el c√≥digo fuente de esta pr√°ctica debe invocar al m√≥dulo :file:`app.py`,
        abra una consola de comando, acceda al directorio donde se encuentra la estructura previa
        y ejecute el siguiente comando:

      .. code-block:: console

          $ streamlit run app.py

      El anterior comando al ejecutar debe mostrar el siguiente mensaje:

      .. code-block:: console

          You can now view your Streamlit app in your browser.

          Local URL: http://localhost:8501
          Network URL: http://172.28.94.109:8501

   .. group-tab:: Windows

      Antes de ejecutar debes instalar sus dependencias, con el siguiente comando:

      .. code-block:: console

          > pip install -r requirements.txt

      Ademas debe instalar y editar el archivo :file:`.env` con el siguiente comando:

      .. code-block:: console

          > COPY .env.example .env
          > notepad.exe .env

      .. tip::
        El archivo :file:`.env` se definen las configuraciones de conexi√≥n a la base de datos,
        puede modificarlo cambiar valores de la conexi√≥n.

      .. tip::
        Para ejecutar el c√≥digo fuente de esta pr√°ctica debe invocar primero al m√≥dulo :file:`db_initial.py`,
        abra una consola de comando, acceda al directorio donde se encuentra la estructura previa
        y ejecute el siguiente comando:

      .. code-block:: console

          > python db_initial.py

      El anterior c√≥digo al ejecutar debe mostrar el siguiente mensaje:

      .. code-block:: console

          INFO:root:Database creation 'simple_blog.sqlite3' was successful!
          INFO:root:Connection to database 'simple_blog.sqlite3' was established successfully!
          INFO:root:The table was created successfully!
          INFO:root:The cursor for create database table was closed successfully!
          INFO:root:¬°3 record(s) was(were) successfully added to the table!
          INFO:root:The cursor for data initial of blog entry posts was closed successfully!
          INFO:root:Disconnect to database 'simple_blog.sqlite3' was closed successfully!

      .. tip::
        Para ejecutar el c√≥digo fuente de esta pr√°ctica debe invocar al m√≥dulo :file:`app.py`,
        abra una consola de comando, acceda al directorio donde se encuentra la estructura previa
        y ejecute el siguiente comando:

      .. code-block:: console

          > streamlit run app.py

      El anterior comando al ejecutar debe mostrar el siguiente mensaje:

      .. code-block:: console

          You can now view your Streamlit app in your browser.

          Local URL: http://localhost:8501
          Network URL: http://172.28.94.109:8501

.. note::
    ``Local URL``
        Direcci√≥n local de tu PC donde ejecuta esta demostraci√≥n, valor por
        defecto es **http://localhost:8501**

    ``Network URL``
        Direcci√≥n de la red local de tu PC donde donde puede compartir la forma
        como accede a esta demostraci√≥n.

Abra el navegador web en la direcci√≥n local definida en el valor ``Local URL``:

.. figure:: ../_static/images/streamlit_sqlite_crud_blog_index.png
    :align: center
    :width: 60%

    Streamlit - SQLite CRUD - Home View

----

.. figure:: ../_static/images/streamlit_sqlite_crud_blog_view.png
    :align: center
    :width: 60%

    Streamlit - SQLite CRUD - View Posts

----

.. figure:: ../_static/images/streamlit_sqlite_crud_blog_search.png
    :align: center
    :width: 60%

    Streamlit - SQLite CRUD - Search by title or author

----

.. figure:: ../_static/images/streamlit_sqlite_crud_blog_add.png
    :align: center
    :width: 60%

    Streamlit - SQLite CRUD - Add Posts

----

.. figure:: ../_static/images/streamlit_sqlite_crud_blog_manage.png
    :align: center
    :width: 60%

    Streamlit - SQLite CRUD - Manage Blog

----

.. figure:: ../_static/images/streamlit_sqlite_crud_blog_delete.png
    :align: center
    :width: 60%

    Streamlit - SQLite CRUD - Delete Posts

----

.. figure:: ../_static/images/streamlit_sqlite_crud_blog_graphic_metrics_author_bar_plot.png
    :align: center
    :width: 60%

    Streamlit - SQLite CRUD - Generate Bar Plot Author Stats Metrics Graphic

----

.. figure:: ../_static/images/streamlit_sqlite_crud_blog_graphic_metrics_author_pie_plot.png
    :align: center
    :width: 60%

    Streamlit - SQLite CRUD - Generate Pie Plot Author Stats Metrics Graphic

----

.. figure:: ../_static/images/streamlit_sqlite_crud_blog_graphic_wordcloud.png
    :align: center
    :width: 60%

    Streamlit - SQLite CRUD - Generate Word Cloud Graphic

----

.. figure:: ../_static/images/streamlit_sqlite_crud_blog_graphic_barhorizontalplot.png
    :align: center
    :width: 60%

    Streamlit - SQLite CRUD - Generate Bar Horizontal Plot Graphic

.. comments:

    .. figure:: ../_static/images/streamlit_sqlite_crud_blog_update.png
        :align: center
        :width: 60%

        Streamlit - SQLite CRUD - Update Posts

    ----

    .. figure:: ../_static/images/streamlit_sqlite_crud_blog_about.png
        :align: center
        :width: 60%

        Streamlit - SQLite CRUD - About

De esta forma tiene una pr√°ctica real de crear un CRUD, usando fuente de datos
una base de datos SQLite y usado la librer√≠a Streamlit.

----

.. seealso::

    Consulte la secci√≥n de :ref:`lecturas suplementarias <lecturas_extras_leccion5>`
    del entrenamiento para ampliar su conocimiento en esta tem√°tica.


.. raw:: html
   :file: ../_templates/partials/soporte_profesional.html

.. disqus::


.. _`streamlit`: https://pypi.org/project/streamlit/
.. _`requirements.txt`: https://pip.pypa.io/en/stable/reference/requirements-file-format/
.. _`pip`: https://pip.pypa.io/en/stable/
.. _`dotenv`: https://dev.to/emma_donery/python-dotenv-keep-your-secrets-safe-4ocn
.. _`python-dotenv`: https://pypi.org/project/python-dotenv/
.. _`Hello World`: https://es.wikipedia.org/wiki/Hola_mundo
